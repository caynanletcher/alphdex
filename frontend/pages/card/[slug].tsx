import Head from "next/head";
import ky from "ky-universal";
import { GetStaticPaths, GetStaticProps, InferGetStaticPropsType } from "next";
import { Card } from "../../card.model";
import Header from "../../components/Header";
import Footer from "../../components/Footer";
import Navbar from "../../components/Navbar";
import CardApp from "../../components/CardApp";
import slugify from "slugify";

export default function CardsPage({
  playedCardsData,
  allCardsData,
}: InferGetStaticPropsType<typeof getStaticProps>) {
  return (
    <div>
      <Head>
        <title>Card | Alphdex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <Header />
      <CardApp />
      <Footer />
    </div>
  );
}

export const getStaticPaths: GetStaticPaths = async (context) => {
  // When this is true (in preview environments) don't
  // prerender any static pages
  // (faster builds, but slower initial page load)
  if (process.env.SKIP_BUILD_STATIC_GENERATION === "1") {
    return {
      paths: [],
      fallback: "blocking",
    };
  }

  let res = await ky(
    `https://api.pokemontcg.io/v2/cards?select=name,number,set`
  );
  const cardData: any = await res.json();
  // for (let i = 1; i <= cardData.pageSize; i++) {
  //   let res = await ky(
  //     `https://api.pokemontcg.io/v2/cards?select=name,number,set&page=${i}`
  //   );
  //   const cardData: any = await res.json();
  // }

  const paths = cardData.data.map((card: Card) => {
    const parseSlug = encodeURIComponent(
      slugify(`${card.name}-${card.set.name}-${card.number}`, {
        lower: true,
      })
    );
    return {
      params: {
        slug: parseSlug,
      },
    };
  });

  // { fallback: false } means other routes should 404
  return { paths, fallback: false };
};

export const getStaticProps: GetStaticProps = async (context: any) => {
  let res = await ky(
    `${process.env.NEXT_PUBLIC_HOST}/api/cards/?set__code=${context.params.id}`
  );
  const playedCardsData: Card[] = await res.json();
  res = await ky(
    `https://api.pokemontcg.io/v2/cards?q=set.id:"${context.params.id}"&select=name,number,images,set`
  );
  const allCardsData: Card[] = await res.json();
  return {
    props: {
      playedCardsData,
      allCardsData,
    },
  };
};
